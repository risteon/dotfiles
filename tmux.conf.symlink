#e ~/.tmux.conf

# Global settings

# Set prefix key to Ctrl-a
unbind-key C-b
set-option -g prefix C-a

#History size
set-option -g history-limit 10000

# Don't let tmux rename windows
set-window-option -g allow-rename off

#Status line
set -g status-bg blue
# configure contents of status bar
set -g status-left-length 40
set -g status-left "#[fg=white]\"#S\""

set -g status-right "#[fg=black] #h | %d %b %R"

setw -g monitor-activity on
set -g visual-activity on

# 256-colour terminal (tmux needs this to be 'screen')
set-option -g default-terminal screen-256color

# options based on tmux version
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc)" = 1 ]' " \
   bind-key -T copy-mode-vi v   send -X begin-selection; \
   bind-key -T copy-mode-vi V   send -X select-line; \
   bind-key -T copy-mode-vi C-v send -X rectangle-toggle; \
   bind-key -T copy-mode-vi y   send -X copy-pipe-and-cancel 'xclip -selection clipboard -in'"

# fiddle with colors of inactive windows
# and change color of active window
# and set color of regular and active panes
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc)" = 1 ]' \
  "setw -g window-status-fg cyan; \
   setw -g window-status-bg colour234; \
   setw -g window-status-attr dim; \
   setw -g window-status-current-fg white; \
   setw -g window-status-current-bg colour88; \
   setw -g window-status-current-attr bright; \
   set -g pane-border-fg colour238; \
   set -g pane-border-bg default; \
   set -g pane-active-border-fg blue; \
   set -g pane-active-border-bg default"


if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.9" | bc)" = 1 ]' \
   "set -g message-style fg=red,bg=black; \
    set -g message-style bright; \
    set -g window-status-style          fg=cyan,bg=colour234,attr=dim; \
    set -g window-status-current-style  fg=white,bg=colour88,attr=bright; \
    set -g window-status-bell-style     fg=red,bg=black; \
    set -g window-status-activity-style fg=white,bg=black; \
    set -g pane-border-style            fg=colour238,bg=default; \
    set -g pane-active-border-style     fg=blue,bg=default"


#mouse
setw -g -q mouse on


# send the prefix to client inside window
bind-key C-a send-prefix

# Key bindings
# reload settings
bind-key R source-file ~/.tmux.conf

# last window
bind-key a last-window

# start first window and pane at 1, not zero
set -g base-index 1
set -g pane-base-index 1

# navigate using vim-style keys
setw -g mode-keys vi

# better mnemonics for splitting panes!
bind | split-window -h
bind - split-window -v

# vim / xmonad style bindings for pane movement
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# vim / xmonad style bindings for window movement
bind -r C-j select-window -t :-
bind -r C-k select-window -t :+

# shift-movement keys will resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# do not wait for escape sequence
set -s escape-time 0

# Fenstergröße wenn mehrere Clients dieselbe Session betrachten
setw -g aggressive-resize on

# toggle synchronization of all panes in current window
bind -r S setw synchronize-panes

# xclip
# allow xclip to work locally
set-environment -g DISPLAY :0.0
# paste-buffer into X11 selection
bind C-c run "tmux show-buffer | xclip -i -selection primary"
# X11 selection into tmux paste-buffer
bind C-v run "tmux set-buffer -- \"$(xclip -o -selection primary)\"; tmux paste-buffer"

# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

run-shell "powerline-daemon -q"

source "${POWERLINE_LOCATION}/bindings/tmux/powerline.conf"

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run '~/.tmux/plugins/tpm/tpm'

