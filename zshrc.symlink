
# =============================================================================
#                                   Variables
# =============================================================================

# manually set language envionment
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"

# Path to your oh-my-zsh installation.
export DOTFILES_BASEDIR=$HOME/dotfiles
export ZSH=$DOTFILES_BASEDIR/oh-my-zsh

# Customize interactive python shell
export PYTHONSTARTUP=~/.pythonrc

# user bin
export PATH="$PATH:${HOME}/.local/bin"

# =============================================================================
#                               antigen
# =============================================================================

source $DOTFILES_BASEDIR/antigen/antigen.zsh

# Load the oh-my-zsh's library.
antigen use oh-my-zsh

# Bundles from the default repo (robbyrussell's oh-my-zsh).
antigen bundle git
antigen bundle heroku
antigen bundle pip
antigen bundle lein
antigen bundle command-not-found
antigen bundle paulirish/git-open
#antigen bundle allcatsarebeautiful/fasd
antigen bundle zsh-users/zsh-autosuggestions

# Syntax highlighting bundle.
antigen bundle zsh-users/zsh-syntax-highlighting

# Load the theme. Crash when entering git repository?
# antigen theme robbyrussell

# Tell Antigen that you're done.
antigen apply


# =============================================================================
#                               zsh options
# =============================================================================
# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# ZSH_THEME="powerlevel9k/powerlevel9k"
# ZSH_THEME="amuse"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# use VI MODE (you want this!)
bindkey -v
# kill vi mode lag
export KEYTIMEOUT=1

# History
HISTFILE=~/.zsh_history
HISTSIZE=100000
SAVEHIST=100000

setopt autocd                   # Allow changing directories without `cd`
setopt append_history           # Dont overwrite history
setopt extended_history         # Also record time and duration of commands.
setopt share_history            # Share history between multiple shells
setopt hist_expire_dups_first   # Clear duplicates when trimming internal hist.
setopt hist_find_no_dups        # Dont display duplicates during searches.
setopt hist_ignore_dups         # Ignore consecutive duplicates.
setopt hist_ignore_all_dups     # Remember only one unique copy of the command.
setopt hist_reduce_blanks       # Remove superfluous blanks.
setopt hist_save_no_dups        # Omit older commands in favor of newer ones.

# Enable completion for ./ and ../ directories
zstyle -e ':completion:*' special-dirs '[[ $PREFIX = (../)#(|.|..) ]] && reply=(..)'

# zsh-syntax-highlighting
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern)
ZSH_HIGHLIGHT_PATTERNS+=("rm -rf *" "fg=white,bold,bg=red")
typeset -A ZSH_HIGHLIGHT_STYLES
ZSH_HIGHLIGHT_STYLES[path]="fg=white,underline"
ZSH_HIGHLIGHT_STYLES[path_pathseparator]="fg=grey"
ZSH_HIGHLIGHT_STYLES[alias]="fg=cyan"
ZSH_HIGHLIGHT_STYLES[builtin]="fg=cyan"
ZSH_HIGHLIGHT_STYLES[function]="fg=cyan"
ZSH_HIGHLIGHT_STYLES[command]="fg=green"
ZSH_HIGHLIGHT_STYLES[precommand]="fg=green"
ZSH_HIGHLIGHT_STYLES[hashed-command]="fg=green"
ZSH_HIGHLIGHT_STYLES[commandseparator]="fg=yellow"
ZSH_HIGHLIGHT_STYLES[redirection]="fg=magenta"
ZSH_HIGHLIGHT_STYLES[bracket-level-1]="fg=cyan,bold"
ZSH_HIGHLIGHT_STYLES[bracket-level-2]="fg=green,bold"
ZSH_HIGHLIGHT_STYLES[bracket-level-3]="fg=magenta,bold"
ZSH_HIGHLIGHT_STYLES[bracket-level-4]="fg=yellow,bold"

# =============================================================================
#                               non-antigen plugins
# =============================================================================

[ -f $HOME/.fzf.zsh ] && source $HOME/.fzf.zsh

# =============================================================================
#                         plugin configuration
# =============================================================================
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=25
ZSH_AUTOSUGGEST_USE_ASYNC=ON
bindkey '^J' autosuggest-accept
bindkey '^@' autosuggest-execute

# =============================================================================
#                   set zsh functions dir (autoloaded when used)
# =============================================================================
fpath=( ~/.zfunc "${fpath[@]}" )
autoload -Uz cnda
autoload -Uz cndd
autoload -Uz drunc
autoload -Uz git-list-author-lines
autoload -Uz tb
autoload -Uz buttervolume

# =============================================================================
#              setup-generated or manual local env vars and setups
# =============================================================================
# environment variables, local configuration
if [ -f ~/.localrc ]; then
    source ~/.localrc
fi
if [ -f ~/.localrc.zsh ]; then
    source ~/.localrc.zsh
fi

# =============================================================================
#                           miscellaneous
# =============================================================================

# set this before sourcing fasd. So that its default aliasas are based on the editor
# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='vim'
fi

# use fasd to edti files with vim
alias v='f -t -e vim -b viminfo'

# enable fasd in cached mode
fasd_cache="$HOME/.fasd-init-zsh"
if [ "$(command -v fasd)" -nt "$fasd_cache" -o ! -s "$fasd_cache" ]; then
  fasd --init posix-alias zsh-hook zsh-ccomp zsh-ccomp-install zsh-wcomp zsh-wcomp-install >| "$fasd_cache"
fi
source "$fasd_cache"
unset fasd_cache

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
# plugins=(git rvm fasd)

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# ls dircolors
if [ -x /usr/bin/dircolors ]; then
    test -r ~/dotfiles/.dircolors && eval "$(dircolors -b ~/dotfiles/.dircolors)" || eval "$(dircolors -b)"
fi
# color completions the same way GNU does
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

# =============================================================================
#                                 prompt
# =============================================================================

# oh-my-zsh
# source $ZSH/oh-my-zsh.sh

eval "$(oh-my-posh init zsh --config /usr/share/oh-my-posh/themes/catppuccin_macchiato.omp.json)"

# enable thefuck after PS2 is set
# eval $(thefuck --alias)

# =============================================================================
#                                 aliases
# =============================================================================
# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
# These aliases are shared with other shells (bash)
if [ -f $DOTFILES_BASEDIR/sh_alias ]; then
    source $DOTFILES_BASEDIR/sh_alias
else
    print "Warn: $DOTFILES_BASEDIR/sh_alias not found."
fi


#AWSume alias to source the AWSume script
#alias awsume=". awsume"
#fpath=(/usr/local/share/zsh/site-functions $fpath)

# =============================================================================
#                               non-antigen plugins
# =============================================================================
source <(fzf --zsh)

